■概要
	ツール名：NotfyStockPrice
	説明：
		株価が安くなった/高くなった時にGmailで通知してくれるシステム
		Todo:Lineに通知が行くとより使い勝手がいい。

■機能
	定期的に株価を取得する。
		取得するタイミングは、毎日で7時とする。(その日に株を売買したいけど、夜中はみないので、朝チェックするようにする)

	チェックする銘柄と下落・高騰の定義をエクセルでまとめて管理する。
		・取得する銘柄の「企業名」と「銘柄コード」を管理する。[シート名：BrandList]
		・通知条件の定義(下落定義と高騰定義)を管理する。[シート名：DefineNotfy]
		また、条件には売買属性を設ける。売買属性は変動率が1以上1未満で判断できる。
			例)1週間前から今日までで10%株価が上がった。[売り時]
			例)2週間前から今日までで10%株価が上がった。[売り時]
			例)1週間前から今日までで10%株価が下がった。[買い時]
			例)2週間前から今日までで10%株価が下がった。[買い時]
	
	pythonによって株価を取得する。
		取得する株価の銘柄はエクセルファイルを参照する。
		取得した株価はcsvで1ファイルにまとめた状態で取得する。
		取得したcsvから銘柄ごとにエクセルにシートで分けて保存する。
	
	通知するかの判定
		取得したデータと通知条件を照らし合わせて、通知が必要か判定する。
		通知する場合は、Gmailによって通知を行う。
		通知する内容は、「銘柄」、「銘柄コード」、「合致した条件」
	
	通知先のメールアドレスは、エクセルで設定する.
		[シート名：Mail]

■必要なモジュール / ファイル
	・設定ファイル
		Setting.xlsx
			[シート名：BrandList]
			[シート名：DefineNotfy]
			[シート名：Mail]
	・出力ファイル
		ExportStockPrice.csv(pythonによって出力する)
	・pyファイル
		GetStockPriceToCsv.py
			株価を取得して、Csvに出力する。
		JudgeNotfyCond.py
			ExportStockPrice.csvを参照して、Setting.xlsx[シート名：DefineNotfy]に合致しているか判定する。
		SendGmail.py
			JudgeNotfyCond.pyが通知判定を下した場合、Gmailでメールする.Setting.xlsx[シート名：Mail]を参照する.
			メールの件名は下記の規則とする。
			[NotfyStockPrice][売買属性]銘柄
			メールの本文は下記を記載する。
			・銘柄
			・銘柄コード
			・合致した通知判定
		ReadSettingFile.py
			設定ファイルの読み込みモジュール
